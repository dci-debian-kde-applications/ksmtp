diff --git a/src/session.cpp b/src/session.cpp
index 861419d..0be26a9 100644
--- a/src/session.cpp
+++ b/src/session.cpp
@@ -27,6 +27,7 @@
 #include "ksmtp_debug.h"
 
 #include <QHostAddress>
+#include <QHostInfo>
 #include <QUrl>
 #include <QEventLoop>
 #include <QPointer>
@@ -80,6 +81,30 @@ void SessionPrivate::setAuthenticationMethods(const QList<QByteArray> &authMetho
     }
 }
 
+void SessionPrivate::startHandshake()
+{
+    QString hostname = m_customHostname;
+
+    if (hostname.isEmpty()) {
+        // FIXME: QHostInfo::fromName can get a FQDN, but does a DNS lookup
+        hostname = QHostInfo::localHostName();
+        if (hostname.isEmpty()) {
+            hostname = QStringLiteral("localhost.invalid");
+        } else if (!hostname.contains(QLatin1Char('.'))) {
+            hostname += QStringLiteral(".localnet");
+        }
+    }
+
+    QByteArray cmd;
+    if (!m_ehloRejected) {
+         cmd = "EHLO ";
+    } else {
+         cmd = "HELO ";
+    }
+    setState(Session::Handshake);
+    sendData(cmd + QUrl::toAce(hostname));
+}
+
 
 
 Session::Session(const QString &hostName, quint16 port, QObject *parent)
@@ -277,15 +302,7 @@ void SessionPrivate::responseReceived(const ServerResponse &r)
 
     if (m_state == Session::Ready) {
         if (r.isCode(22) || m_ehloRejected) {
-            QByteArray cmd;
-            if (!m_ehloRejected) {
-                cmd = "EHLO ";
-            } else {
-                cmd = "HELO ";
-            }
-            setState(Session::Handshake);
-            const auto hostname = m_customHostname.isEmpty() ? m_thread->hostName() : m_customHostname;
-            sendData(cmd + QUrl::toAce(hostname));
+            startHandshake();
             return;
         }
     }
@@ -346,7 +363,11 @@ KTcpSocket::SslVersion SessionPrivate::negotiatedEncryption() const
 
 void SessionPrivate::encryptionNegotiationResult(bool encrypted, KTcpSocket::SslVersion version)
 {
-    Q_UNUSED(encrypted);
+    if (encrypted) {
+        // Get the updated auth methods
+        startHandshake();
+    }
+
     m_sslVersion = version;
 }
 
diff --git a/src/session_p.h b/src/session_p.h
index 875f7be..90151f6 100644
--- a/src/session_p.h
+++ b/src/session_p.h
@@ -73,6 +73,7 @@ private Q_SLOTS:
 
 private:
 
+    void startHandshake();
     void startNext();
     void startSocketTimer();
     void stopSocketTimer();
diff --git a/src/sessionthread.cpp b/src/sessionthread.cpp
index 1e4db8b..c195826 100644
--- a/src/sessionthread.cpp
+++ b/src/sessionthread.cpp
@@ -223,7 +223,6 @@ void SessionThread::sslConnected()
     } else {
         qCDebug(KSMTP_LOG) << "TLS negotiation done.";
 
-        QMetaObject::invokeMethod(this, "sendData", Qt::QueuedConnection, Q_ARG(QByteArray, "EHLO " + QUrl::toAce(hostName())));
         Q_EMIT encryptionNegotiationResult(true, m_socket->negotiatedSslVersion());
     }
 }
